/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LogoutRouteImport } from './routes/logout'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardDashboardRouteImport } from './routes/_dashboard/dashboard'
import { Route as DashboardDashboardIndexRouteImport } from './routes/_dashboard/dashboard/index'
import { Route as DashboardDashboardSettingsIndexRouteImport } from './routes/_dashboard/dashboard/settings/index'
import { Route as DashboardDashboardGroupsIndexRouteImport } from './routes/_dashboard/dashboard/groups/index'
import { Route as DashboardDashboardGroupsGroupIdRouteImport } from './routes/_dashboard/dashboard/groups/$groupId'
import { Route as DashboardDashboardGroupsGroupIdIndexRouteImport } from './routes/_dashboard/dashboard/groups/$groupId/index'
import { Route as DashboardDashboardGroupsGroupIdSettleupRouteImport } from './routes/_dashboard/dashboard/groups/$groupId/settleup'
import { Route as DashboardDashboardGroupsGroupIdExpensesRouteImport } from './routes/_dashboard/dashboard/groups/$groupId/expenses'
import { Route as DashboardDashboardGroupsGroupIdBalancesRouteImport } from './routes/_dashboard/dashboard/groups/$groupId/balances'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/_dashboard/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardDashboardIndexRoute = DashboardDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardDashboardRoute,
} as any)
const DashboardDashboardSettingsIndexRoute =
  DashboardDashboardSettingsIndexRouteImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => DashboardDashboardRoute,
  } as any)
const DashboardDashboardGroupsIndexRoute =
  DashboardDashboardGroupsIndexRouteImport.update({
    id: '/groups/',
    path: '/groups/',
    getParentRoute: () => DashboardDashboardRoute,
  } as any)
const DashboardDashboardGroupsGroupIdRoute =
  DashboardDashboardGroupsGroupIdRouteImport.update({
    id: '/groups/$groupId',
    path: '/groups/$groupId',
    getParentRoute: () => DashboardDashboardRoute,
  } as any)
const DashboardDashboardGroupsGroupIdIndexRoute =
  DashboardDashboardGroupsGroupIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardDashboardGroupsGroupIdRoute,
  } as any)
const DashboardDashboardGroupsGroupIdSettleupRoute =
  DashboardDashboardGroupsGroupIdSettleupRouteImport.update({
    id: '/settleup',
    path: '/settleup',
    getParentRoute: () => DashboardDashboardGroupsGroupIdRoute,
  } as any)
const DashboardDashboardGroupsGroupIdExpensesRoute =
  DashboardDashboardGroupsGroupIdExpensesRouteImport.update({
    id: '/expenses',
    path: '/expenses',
    getParentRoute: () => DashboardDashboardGroupsGroupIdRoute,
  } as any)
const DashboardDashboardGroupsGroupIdBalancesRoute =
  DashboardDashboardGroupsGroupIdBalancesRouteImport.update({
    id: '/balances',
    path: '/balances',
    getParentRoute: () => DashboardDashboardGroupsGroupIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/register': typeof RegisterRoute
  '/dashboard': typeof DashboardDashboardRouteWithChildren
  '/dashboard/': typeof DashboardDashboardIndexRoute
  '/dashboard/groups/$groupId': typeof DashboardDashboardGroupsGroupIdRouteWithChildren
  '/dashboard/groups': typeof DashboardDashboardGroupsIndexRoute
  '/dashboard/settings': typeof DashboardDashboardSettingsIndexRoute
  '/dashboard/groups/$groupId/balances': typeof DashboardDashboardGroupsGroupIdBalancesRoute
  '/dashboard/groups/$groupId/expenses': typeof DashboardDashboardGroupsGroupIdExpensesRoute
  '/dashboard/groups/$groupId/settleup': typeof DashboardDashboardGroupsGroupIdSettleupRoute
  '/dashboard/groups/$groupId/': typeof DashboardDashboardGroupsGroupIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/register': typeof RegisterRoute
  '/dashboard': typeof DashboardDashboardIndexRoute
  '/dashboard/groups': typeof DashboardDashboardGroupsIndexRoute
  '/dashboard/settings': typeof DashboardDashboardSettingsIndexRoute
  '/dashboard/groups/$groupId/balances': typeof DashboardDashboardGroupsGroupIdBalancesRoute
  '/dashboard/groups/$groupId/expenses': typeof DashboardDashboardGroupsGroupIdExpensesRoute
  '/dashboard/groups/$groupId/settleup': typeof DashboardDashboardGroupsGroupIdSettleupRoute
  '/dashboard/groups/$groupId': typeof DashboardDashboardGroupsGroupIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/register': typeof RegisterRoute
  '/_dashboard/dashboard': typeof DashboardDashboardRouteWithChildren
  '/_dashboard/dashboard/': typeof DashboardDashboardIndexRoute
  '/_dashboard/dashboard/groups/$groupId': typeof DashboardDashboardGroupsGroupIdRouteWithChildren
  '/_dashboard/dashboard/groups/': typeof DashboardDashboardGroupsIndexRoute
  '/_dashboard/dashboard/settings/': typeof DashboardDashboardSettingsIndexRoute
  '/_dashboard/dashboard/groups/$groupId/balances': typeof DashboardDashboardGroupsGroupIdBalancesRoute
  '/_dashboard/dashboard/groups/$groupId/expenses': typeof DashboardDashboardGroupsGroupIdExpensesRoute
  '/_dashboard/dashboard/groups/$groupId/settleup': typeof DashboardDashboardGroupsGroupIdSettleupRoute
  '/_dashboard/dashboard/groups/$groupId/': typeof DashboardDashboardGroupsGroupIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/login'
    | '/logout'
    | '/register'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/groups/$groupId'
    | '/dashboard/groups'
    | '/dashboard/settings'
    | '/dashboard/groups/$groupId/balances'
    | '/dashboard/groups/$groupId/expenses'
    | '/dashboard/groups/$groupId/settleup'
    | '/dashboard/groups/$groupId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/logout'
    | '/register'
    | '/dashboard'
    | '/dashboard/groups'
    | '/dashboard/settings'
    | '/dashboard/groups/$groupId/balances'
    | '/dashboard/groups/$groupId/expenses'
    | '/dashboard/groups/$groupId/settleup'
    | '/dashboard/groups/$groupId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/login'
    | '/logout'
    | '/register'
    | '/_dashboard/dashboard'
    | '/_dashboard/dashboard/'
    | '/_dashboard/dashboard/groups/$groupId'
    | '/_dashboard/dashboard/groups/'
    | '/_dashboard/dashboard/settings/'
    | '/_dashboard/dashboard/groups/$groupId/balances'
    | '/_dashboard/dashboard/groups/$groupId/expenses'
    | '/_dashboard/dashboard/groups/$groupId/settleup'
    | '/_dashboard/dashboard/groups/$groupId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  RegisterRoute: typeof RegisterRoute
  DashboardDashboardRoute: typeof DashboardDashboardRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/dashboard/': {
      id: '/_dashboard/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardDashboardIndexRouteImport
      parentRoute: typeof DashboardDashboardRoute
    }
    '/_dashboard/dashboard/settings/': {
      id: '/_dashboard/dashboard/settings/'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardDashboardSettingsIndexRouteImport
      parentRoute: typeof DashboardDashboardRoute
    }
    '/_dashboard/dashboard/groups/': {
      id: '/_dashboard/dashboard/groups/'
      path: '/groups'
      fullPath: '/dashboard/groups'
      preLoaderRoute: typeof DashboardDashboardGroupsIndexRouteImport
      parentRoute: typeof DashboardDashboardRoute
    }
    '/_dashboard/dashboard/groups/$groupId': {
      id: '/_dashboard/dashboard/groups/$groupId'
      path: '/groups/$groupId'
      fullPath: '/dashboard/groups/$groupId'
      preLoaderRoute: typeof DashboardDashboardGroupsGroupIdRouteImport
      parentRoute: typeof DashboardDashboardRoute
    }
    '/_dashboard/dashboard/groups/$groupId/': {
      id: '/_dashboard/dashboard/groups/$groupId/'
      path: '/'
      fullPath: '/dashboard/groups/$groupId/'
      preLoaderRoute: typeof DashboardDashboardGroupsGroupIdIndexRouteImport
      parentRoute: typeof DashboardDashboardGroupsGroupIdRoute
    }
    '/_dashboard/dashboard/groups/$groupId/settleup': {
      id: '/_dashboard/dashboard/groups/$groupId/settleup'
      path: '/settleup'
      fullPath: '/dashboard/groups/$groupId/settleup'
      preLoaderRoute: typeof DashboardDashboardGroupsGroupIdSettleupRouteImport
      parentRoute: typeof DashboardDashboardGroupsGroupIdRoute
    }
    '/_dashboard/dashboard/groups/$groupId/expenses': {
      id: '/_dashboard/dashboard/groups/$groupId/expenses'
      path: '/expenses'
      fullPath: '/dashboard/groups/$groupId/expenses'
      preLoaderRoute: typeof DashboardDashboardGroupsGroupIdExpensesRouteImport
      parentRoute: typeof DashboardDashboardGroupsGroupIdRoute
    }
    '/_dashboard/dashboard/groups/$groupId/balances': {
      id: '/_dashboard/dashboard/groups/$groupId/balances'
      path: '/balances'
      fullPath: '/dashboard/groups/$groupId/balances'
      preLoaderRoute: typeof DashboardDashboardGroupsGroupIdBalancesRouteImport
      parentRoute: typeof DashboardDashboardGroupsGroupIdRoute
    }
  }
}

interface DashboardDashboardGroupsGroupIdRouteChildren {
  DashboardDashboardGroupsGroupIdBalancesRoute: typeof DashboardDashboardGroupsGroupIdBalancesRoute
  DashboardDashboardGroupsGroupIdExpensesRoute: typeof DashboardDashboardGroupsGroupIdExpensesRoute
  DashboardDashboardGroupsGroupIdSettleupRoute: typeof DashboardDashboardGroupsGroupIdSettleupRoute
  DashboardDashboardGroupsGroupIdIndexRoute: typeof DashboardDashboardGroupsGroupIdIndexRoute
}

const DashboardDashboardGroupsGroupIdRouteChildren: DashboardDashboardGroupsGroupIdRouteChildren =
  {
    DashboardDashboardGroupsGroupIdBalancesRoute:
      DashboardDashboardGroupsGroupIdBalancesRoute,
    DashboardDashboardGroupsGroupIdExpensesRoute:
      DashboardDashboardGroupsGroupIdExpensesRoute,
    DashboardDashboardGroupsGroupIdSettleupRoute:
      DashboardDashboardGroupsGroupIdSettleupRoute,
    DashboardDashboardGroupsGroupIdIndexRoute:
      DashboardDashboardGroupsGroupIdIndexRoute,
  }

const DashboardDashboardGroupsGroupIdRouteWithChildren =
  DashboardDashboardGroupsGroupIdRoute._addFileChildren(
    DashboardDashboardGroupsGroupIdRouteChildren,
  )

interface DashboardDashboardRouteChildren {
  DashboardDashboardIndexRoute: typeof DashboardDashboardIndexRoute
  DashboardDashboardGroupsGroupIdRoute: typeof DashboardDashboardGroupsGroupIdRouteWithChildren
  DashboardDashboardGroupsIndexRoute: typeof DashboardDashboardGroupsIndexRoute
  DashboardDashboardSettingsIndexRoute: typeof DashboardDashboardSettingsIndexRoute
}

const DashboardDashboardRouteChildren: DashboardDashboardRouteChildren = {
  DashboardDashboardIndexRoute: DashboardDashboardIndexRoute,
  DashboardDashboardGroupsGroupIdRoute:
    DashboardDashboardGroupsGroupIdRouteWithChildren,
  DashboardDashboardGroupsIndexRoute: DashboardDashboardGroupsIndexRoute,
  DashboardDashboardSettingsIndexRoute: DashboardDashboardSettingsIndexRoute,
}

const DashboardDashboardRouteWithChildren =
  DashboardDashboardRoute._addFileChildren(DashboardDashboardRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  RegisterRoute: RegisterRoute,
  DashboardDashboardRoute: DashboardDashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
